Com a tag audio como está no inicio do projeto (sem o controls dentro da tag) não é possível reproduzir os áudios, porém, com o controls, aparece a barrinha de áudio padrão e essa barrinha não costuma ser fácil de mudar com o CSS ou, até mesmo, impossível dependendo do caso. Nesse caso é preciso fazer essa interação entre os botões e os áudios com o JavaScript.

Para utilizar o JavaScript no HTML é só usar a tag <script></script>, onde é possível utilizar os comandos do JavaScript dentro da tag ou utilizar um arquivo externo, para isso é só passar <script src="nome_do_arquivo.js"></script> e fazer o código no arquivo que está no campo src. Por padrão é preciso dar o nome do arquivo principal de JavaScript de main.js.

Para buscar um elemento em uma página é só utilizar o DevTools. Com o DevTools é possível entender como as coisas funcionam no navegador e fazer testes para garantir que está tudo funcionando normalmente. O que é feito no DevTools não é salvo no arquivo, então mudanças feitas por lá não vão alterar o projeto.

Para selecionar algo com o JavaScript é só utilizar o document.querySelector('Passar o que deve ser Selecionado (Como uma classe, tag ou id)'). Para tag é só usar o nome da tag, para classes precisa passar o . antes do nome da classe e se for um id é preciso passar a # antes do nome do id.

document.querySelector('input[type="tel"]') -> Dessa forma o input do type tal é selecionado

é possível acessar a função onclick atraves do JavaScript da seguinte forma: document.querySelector('.tecla_pom').onclick = tocaSomPom. E a função chamada dentro desse onclick não pode ter parenteses, pois, dessa forma, em JavaScript a função só é chamada quando o usuario interage com a página.

Uma referencia deve ser declarada com base no que deve receber e, ai sim, receber um nome e um tipo (exemplo: pode ser uma variavel ou algo constante).

Com a função onkeydown é possível capturar uma tecla sendo pressionada e o onkeyup é para capturar quando a tecla para de ser pressionada

Forma de limitar quais teclas podem ser acionadas no onkeydown:
const listaDeTeclas = document.querySelectorAll('.tecla')
const tecla = listaDeTeclas[count]
tecla.onkeydown = function (evento) {
        if(evento.code === "Enter" || evento.code === "Space") {
            tecla.classList.add('ativa')
        }
    }

O == compara o valor e o === compara o valor e o tipo da variavel

Existem duas formas de comparar se um elemento é nulo no JavaScript, da forma padrão elemento != nulo ou simplemente elemento

A função addEventListener mostra o que depende de um evento do usuario, como o clique na tela, e precisa passar oq será feito apos esse evento. Exemplo:
document.querySelector('#robotron').addEventListener('click', dizOi) (O dizOi é uma função que não tem os parenteses, pois, dessa forma, só será chamada após o usuario fazer alguma ação e não logo que a tela carregar)

No JavaScript é possível criar funcoes anonimas, exemplo:
function(){
    console.log('cliquei no robo') 
} (é possível perceber que é uma função sem nome, então ela só pode ser utilizada quando é criada e não pode chamar em outros lugares)
ou
() => {
    console.log('cliquei no robo') 
}

Outra forma de chamra a funcao anonima é utilizando os parametros pra ver os eventos da funcao:
(evento) => {
    console.log(evento)
}

O target mostra onde o eventoe está acontecendo 

É possível criar atributos no HTML para serem usados no JavaScript, é só passar isso na tag: data-NomeAtributo="OqueOAtributoRecebe"
referencia no JavaScript: const controle = document.querySelectorAll('[data-NomeAtributo]')

pegando informações de um data- é so usar .dataset.controle (no exemplo utilizado se usa apos o target)
